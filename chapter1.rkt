#lang sicp

; 练习1.2
(/ (+ 5
      4
      (- 2
         (- 3
            (+ 6
               (/ 4 5)))))
   (* 3
      (- 6 2)
      (- 2 7)))

; 练习1.3
(define (sum-biggest-two x y z)
  (cond ((and (< x y) (< x z))
         (+ y z))
        ((and (< y x) (< y z))
         (+ x z))
        (else (+ x y))))

; 练习1.4
; 如果b > 0, 那么运算符为+。否则运算符为-。
; 最终的效果是a + |b|

; 练习1.5
; 应用序求值：永不停止。因为需要分别求值每个参数，
; 碰到(p)这个参数的时候求值会无限调用自身
;（scheme有尾递归所以不会栈溢出）
; 正则序求值：打印出0。完全展开后归约的过程：
; (test 0 {p)) -> (if (= 0 0) -> 0
;                     0
;                     (p))
